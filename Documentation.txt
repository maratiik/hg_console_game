##### Map.py #####

### class Room ###

# Аттрибуты #

room_id - str, название комнаты
neighbors - dict, соседи комнаты, в key лежит комната,
в value лежит dict, в котором key - сосед, а value - 0/i,
0 - int, комната закрыта, i - открыта (нужен ключ i для открытия)

# Методы #

__init__(self, room_id) - создает карту

### class Map ###

# Аттрибуты #

rooms - объект класса Room
loot - dict, в key - комната, в value - ее лут
npcs - dict, в key - комната, в value - NPC в ней

# Методы #

_add_room(self, room) - добавляет комнату room
_add_lock(self, room1, room2, locked = 0) - добавляет замок
_show_map(self) - принтит карту



##### NPC.py #####

### class NPC ###

# Аттрибуты #

karma - int, карма:
>50 - не можешь получать информацию с злых npc
>100 - ты герой, все злые npc атакуют
0 - нейтрально
<-50 - не можешь получать информацию с добрых npc
<-100 - ты антигерой, все добрые npc атакуют

loot - list, снаряжение NPC
location - str, локация на карте
game_map - игровая карта
health - int, здоровье
damage - int, урон

# Методы #

_interact(self, player) - сравнивает карму, запускает драку,
сли игрок и npc враждебные, запускает разговор, если нет (см. карму)
_fight(self, player) - запускает похожий метод в классе Player
# ^^^ это можно исправить, чтоб не нагромождать классы одинаковыми методами
_die(self) - протокол смерти npc, он пропадает из комнаты, оставляя только свой лут
_talk(self, player) - протокол разговора
_set_location(self, location) - меняет локацию

### class Warrior ###

# Аттрибуты #

name - str, имя

##### Player.py #####

# class Player #

# Аттрибуты #

name - str, имя
loot - list, инвентарь
location - str, локация
karma - int, карма
game_map - игровая карта
max_hp - int, максимальное количество здоровья
hp - int, текущее здоровье
damage - int, урон
protectiveness - int, защита (во время боя считать, что + к здоровью)
crit_chance - float, шанс ударить критический урон (0-1)
crit_damage - int, критический урон
level - int, уровень
xp - int, текущий опыт
xp_to_level_up - int, опыт, необходимый для получения нового уровня
talent_points - int, количество непотраченных очков таланта

# Методы #
show_map(self) - принтит карту
move(self, room) - перемещает игрока в комнату, если она является соседней
show_location(self) - принтит текущую локацию
interact(self, npc) - взаимодействует с npc, если он находится в той же комнате, что и игрок
fight(self, npc) - атакует npc
show_loot(self) - принтит лут в комнате
inventory(self) - принтит инвентарь
drop_item(self, item) - выкидывает предмет в комнату, если таковой предмет есть в инвентаре
take_item(self, item) - берет предмет из комнаты, если таковой предмет там есть
add_xp(self, xp) - добавляет опыт
level_up(self) - добавляет уровень
